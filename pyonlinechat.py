import asyncio
import time
import random
import logging
from pywebio import start_server
from pywebio.input import *
from pywebio.output import *
from pywebio.session import get_info, defer_call, info as session_info, run_async, run_js

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    filename="chat_log.txt",  # –§–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
    level=logging.INFO,       # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    format="%(asctime)s - %(levelname)s - %(message)s"  # –§–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏
)

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
CHAT_HISTORY_FILE = "chat_history.txt"

# –ß—Ç–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
try:
    with open(CHAT_HISTORY_FILE, "r", encoding="utf-8") as file:
        chat_msgs = [tuple(line.strip().split(":", 1)) for line in file.readlines()]
except FileNotFoundError:
    chat_msgs = []

online_users = set()
user_last_msg_time = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
muted_users = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –º—É—Ç–∞
user_violations = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π
blocked_ips = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP-–∞–¥—Ä–µ—Å–æ–≤ (–∫–ª—é—á: IP, –∑–Ω–∞—á–µ–Ω–∏–µ: –≤—Ä–µ–º—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏)
MAX_MESSAGES_COUNT = 200
SPAM_PROTECTION_INTERVAL = 2  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
IP_BLOCK_DURATION = 60 * 5  # –í—Ä–µ–º–µ–Ω–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ IP-–∞–¥—Ä–µ—Å–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

# –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤
PROHIBITED_WORDS = [
    "–ø—Ä–∏–º–µ—Ä1", "–ø—Ä–∏–º–µ—Ä2", "–ø—Ä–∏–º–µ—Ä3", "–ø—Ä–∏–º–µ—Ä4"
]

# –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –Ω–∏–∫–Ω–µ–π–º–æ–≤ (—á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫)
BLACKLIST_NICKNAMES = [
    "admin", "root", "system", "broadcast", "server", "guest", "anonymous",
    "bot", "spammer", "virus", "hacker", "üì¢", "‚ö†Ô∏è", "‚ùå"
]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
def save_message_to_file(nickname, message):
    with open(CHAT_HISTORY_FILE, "a", encoding="utf-8") as file:
        file.write(f"{nickname}:{message}\n")

async def main():
    global chat_msgs
    
    # –ü–æ–ª—É—á–∞–µ–º IP-–∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_ip = get_info().client_ip
    nickname = None  # –î–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ IP-–∞–¥—Ä–µ—Å
    if user_ip in blocked_ips and blocked_ips[user_ip] > time.time():
        remaining_time = int(blocked_ips[user_ip] - time.time())
        toast(f"‚ùå –í–∞—à IP-–∞–¥—Ä–µ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û—Å—Ç–∞–ª–æ—Å—å {remaining_time} —Å–µ–∫—É–Ω–¥.", color="error")
        logging.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ IP: {user_ip}")
        return
    
    put_markdown("## üßä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω —á–∞—Ç!\n–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ —É–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –≤ 177 —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞!")
    msg_box = output()
    put_scrollable(msg_box, height=300, keep_bottom=True)
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ
    for nick, msg in chat_msgs[-MAX_MESSAGES_COUNT:]:
        msg_box.append(put_markdown(f"{nick}: {msg}"))
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∏ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
    nickname = await input("–í–æ–π—Ç–∏ –≤ —á–∞—Ç", required=True, placeholder="–í–∞—à–µ –∏–º—è", 
                           validate=lambda n: (
                               "–¢–∞–∫–æ–π –Ω–∏–∫ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!" if n in online_users else 
                               "–≠—Ç–æ—Ç –Ω–∏–∫ –∑–∞–ø—Ä–µ—â—ë–Ω!" if n.lower() in BLACKLIST_NICKNAMES else 
                               None
                           ))
    
    # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nickname} ({user_ip}) –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É.")
    
    online_users.add(nickname)
    chat_msgs.append(('üì¢', f'{nickname} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É!'))
    msg_box.append(put_markdown(f'üì¢ {nickname} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É'))
    save_message_to_file('üì¢', f'{nickname} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É!')
    
    refresh_task = run_async(refresh_msg(nickname, msg_box))
    
    try:
        while True:
            data = await input_group("üí≠ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", [
                input(placeholder="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ...", name="msg"),
                actions(name="cmd", buttons=["–û—Ç–ø—Ä–∞–≤–∏—Ç—å", {'label': "–í—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞", 'type': 'cancel'}])
            ], validate=lambda m: ('msg', "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!") if m["cmd"] == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" and not m['msg'] else None)
            
            if data is None:
                break
            
            current_time = time.time()
            last_msg_time = user_last_msg_time.get(nickname, 0)
            
            if current_time - last_msg_time < SPAM_PROTECTION_INTERVAL:
                toast("‚ùå –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.", color="error")
                continue
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º—É—Ç
            if nickname in muted_users and muted_users[nickname] > current_time:
                remaining_time = int(muted_users[nickname] - current_time)
                toast(f"‚ùå –í—ã –≤ –º—É—Ç–µ! –û—Å—Ç–∞–ª–æ—Å—å {remaining_time} —Å–µ–∫—É–Ω–¥.", color="error")
                continue
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
            message = data['msg'].lower()  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            if any(word in message for word in PROHIBITED_WORDS):
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –º—É—Ç–∞ (–æ—Ç 30 —Å–µ–∫—É–Ω–¥ –¥–æ 1 –º–∏–Ω—É—Ç—ã)
                mute_duration = random.randint(10, 120)
                muted_users[nickname] = current_time + mute_duration
                
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –Ω–∞—Ä—É—à–µ–Ω–∏–π
                user_violations[nickname] = user_violations.get(nickname, 0) + 1
                
                if user_violations[nickname] >= 3:
                    # –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–ª–æ–∫–∏—Ä—É–µ–º IP-–∞–¥—Ä–µ—Å –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è
                    block_until = time.time() + IP_BLOCK_DURATION
                    blocked_ips[user_ip] = block_until
                    toast(f"‚ùå –í—ã –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ —á–∞—Ç–∞ –∑–∞ –º–Ω–æ–≥–æ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è! –í–∞—à IP-–∞–¥—Ä–µ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ {IP_BLOCK_DURATION // 60} –º–∏–Ω—É—Ç.", color="error")
                    
                    # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    logging.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nickname} ({user_ip}) –±—ã–ª –∏—Å–∫–ª—é—á—ë–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª.")
                    break
                else:
                    toast(f"‚ùå –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –º—É—Ç –Ω–∞ {mute_duration} —Å–µ–∫—É–Ω–¥. ({user_violations[nickname]}/3 –Ω–∞—Ä—É—à–µ–Ω–∏–π)", color="error")
                
                continue
            
            user_last_msg_time[nickname] = current_time  # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ —Ñ–∞–π–ª
            msg_box.append(put_markdown(f"{nickname}: {data['msg']}"))
            chat_msgs.append((nickname, data['msg']))
            save_message_to_file(nickname, data['msg'])
    
    finally:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if nickname:
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nickname} ({user_ip}) –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç.")
        
        refresh_task.close()
        if nickname in online_users:
            online_users.remove(nickname)
        toast("–í—ã –≤—ã—à–ª–∏ –∏–∑ —á–∞—Ç–∞!")
        msg_box.append(put_markdown(f'üì¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nickname} –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç!'))
        chat_msgs.append(('üì¢', f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nickname} –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç!'))
        save_message_to_file('üì¢', f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nickname} –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç!')
        put_buttons(['–ü–µ—Ä–µ–∑–∞–π—Ç–∏'], onclick=lambda btn: run_js('window.location.reload()'))

async def refresh_msg(nickname, msg_box):
    global chat_msgs
    last_idx = len(chat_msgs)
    while True:
        await asyncio.sleep(1)
        
        for m in chat_msgs[last_idx:]:
            if m[0] != nickname:  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                msg_box.append(put_markdown(f"{m[0]}: {m[1]}"))
        
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if len(chat_msgs) > MAX_MESSAGES_COUNT:
            chat_msgs = chat_msgs[len(chat_msgs) // 2:]
        
        last_idx = len(chat_msgs)

if __name__ == "__main__":
    start_server(main, debug=True, port=8080, cdn=False)